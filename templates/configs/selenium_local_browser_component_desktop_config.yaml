###########################################################################
#
# test configuration file for using a local selenium server, browser-based
# comparison and page components rather than whole page screenshots.
# NOTE! This functionality is rather immature at the time of writing
# and has only been tested successfully on safari and chrome browsers.
# It does not work on firefox.
# As with other test configs this can be used as a template for production
#
###########################################################################

#change this line based on which suite of browsers you want to run
suite: "standard"

#define different suites of browsers here - only tested on safari and chrome - firefox
#known not to work as has a different mechanism for taking screenshots.
suites:
  standard: ["safari", "chrome"]

#define different engines/drivers to run your browser suites here - e.g. selenium
engine:
  webkit: ""
  standard: "selenium"

#engine_mode - set to 'grid' if using a selenium grid, defaults to 'local'
engine_mode: "local"

#If you want to have multiple snapping files, set the file name here
snap_file:
  webkit: "javascript/snap.js"
  standard: ""

# The name of the directory that shots will be stored in
directory:
  - 'shots'

#thumbnail images subdirectory name
thumbnail_directory: thumbnails

#cropped images subdirectory name
crops_directory: crops

# if you are using url comparison, set the url: base: and url: compare: values
# if using browser comparison, set the url: compare: value
# when using browser-based comparison, always leave the base value blank, as we only use the comparison value
domains:
  url:
    base: "http://www.live.bbc.co.uk/news"
    compare: "http://www.live.bbc.co.uk/russian"
  browser:
    base:
    compare: "http://www.live.bbc.co.uk/news"

#the testing of page components rather than whole pages allows you to
#test components of pages by changing the viewport origin point as well
#the height and width of each view. You can also name each view.
#Though currently immature, it is hoped that this option will facilitate the
#testing of individual page components - a key feature in responsive site design,
#adding considerably more flexibility to Wraith-Selenium.
screen_properties:
  desktop:
    - :name: 'view1'
      :dimensions: [320,200]
      :viewport_origin: [100,100]
      :wait_until_element:
    - :name: 'view2'
      :dimensions: [600,450]
      :viewport_origin: [200,200]
      :wait_until_element:
    - :name: 'view3'
      :dimensions: [768,900]
      :viewport_origin: [200,300]
      :wait_until_element:
    - :name: 'view4'
      :dimensions: [1024,1024]
      :viewport_origin: [200,400]
      :wait_until_element:
    - :name: 'view5'
      :dimensions: [1280,1280]
      :viewport_origin: [200,500]
      :wait_until_element:

paths:
  uk_index: /

# If you don't want to name the paths explicitly you can use a yaml
# collection as follows, and names will be derived by replacing / with _
#
# paths:
#  - /imghp
#  - /maps

#Amount of fuzz ImageMagick will use
fuzz: '20%'

#Set the number of days to keep the site spider file
spider_days:
  - 10

###################################################################
#
# SELENIUM ONLY OPTIONS BELOW HERE
#
###################################################################

#set the devices you want to run each browser in your suite on here.
#This will configure the capabilities object you wish to pass to the
#selenium grid. You can have multiple capability objects per browser,
#thereby allowing you test different browser versions or platforms
#You can leave blank for local selenium operation
browser_devices:
  android:
    device:
  safari:
    desktop:
  chrome:
    desktop:
  firefox:
    desktop:
  ie:
    desktop:

#you can define some default parameters to pass to the selenium driver here,
#if you are not defining specific capabilities for each browser
#Filling in these values is optional, but don't delete the key structure
default_parameters:
  :url:
  :capabilities:
    :version:
    :platform:

#if you have just set screen widths in screen_dimensions, you can set a generic height for the screen here
default_screen_height: 1000

#page load timeout
timeout: 20

#base type - either 'browser' or 'url'.
#browser base type will compare a given url using a browser as a base.
#url base type will use a url as the basis for comparison against a second url
base_type: browser

#set this if you are using browser type based comparison
base_browser: chrome

#set this flag to true if using browser based comparison and you wish to compare
#the base browser image to a shot of the refreshed page url using the same base browser.
#This can be useful to check for page differences caused by loading or other instabilities,
#but first check that caching in the base browser has been entirely disabled.
compare_base_to_base: true

#set this to get selenium to wait until a certain page element is displayed
default_wait_until_element: comp-most-popular

#very annoyingly and weirdly, selenium often interprets screenshot sizes differently from those
#stipulated in your window dimensions. Offset behaviour seems inconsistent between browsers,
#browser versions and between different widths.
#Your first run using selenium using browser-based comparison may well result in some
#invalid diff comparisons due to screen shot width variation.
#To rectify this, inspect the screenshot widths produced against your configured widths,
#You can then add a bias value for each browser screen width as shown below.
screenshot_bias:
  width:
    chrome:
      desktop:
        320: 0
        600: 0
        768: 0
        1024: 0
        1280: 0
      device:
        1024: 0
    safari:
      desktop:
        320:  0
        600:  0
        768:  0
        1024: 0
        1280: 0
      device:
        1024: 0

###################################################################
#
# SELENIUM GRID ONLY OPTIONS BELOW HERE
#
###################################################################

grid_url: http://localhost:4444

